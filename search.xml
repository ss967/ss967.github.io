<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>text2video论文阅读简记</title>
      <link href="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/"/>
      <url>/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="Text2Video-Text-driven-Talking-head-Video-Synthesis-with-Personalized-Phoneme-Pose-Dictionary">Text2Video: Text-driven Talking-head Video Synthesis with Personalized Phoneme - Pose Dictionary</h2><p><strong>论文连接</strong>：<a href="https://arxiv.org/abs/2104.14631">https://arxiv.org/abs/2104.14631</a></p><p><strong>GitHub代码地址</strong>：<a href="https://github.com/sibozhang/Text2Video">https://github.com/sibozhang/Text2Video</a>     （只有测试代码，没有训练部分）</p><p><strong>演示视频</strong>：<a href="https://youtu.be/d5MFzHxeOTs">https://youtu.be/d5MFzHxeOTs</a></p><blockquote><p>任务</p></blockquote><p>以任意一段文字作为输入，生成一段表情和口型自然地念出这段文字的talking-head视频</p><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902151523855.png" alt="image-20220902151523855"></p><blockquote><p>动机</p></blockquote><p>本文相较于基于语音的视频生成方法的三个优势：</p><ul><li>仅仅需要很少的训练视频就可以完成预处理训练</li><li>由于采用了TTS，模型不会受到讲话者影响</li><li>处理，训练，推断速度大幅提升</li></ul><blockquote><p>方法</p></blockquote><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902151902492.png" alt="image-20220902151902492"></p><ul><li><p>方法总体概述：给定输入文本，通过百度的TTS生成对应的语音，然后通过P2FA对齐器(aligner）将语音强制对齐获得语音的音素时间戳并在音素-姿态（phoneme-pose）字典中查找对应的音素姿态（phoneme poses），再通过关键姿态插值和平滑处理生成姿态序列，最后通过vid2vid GAN生成最终的视频</p><ul><li>系统的输入的文本可以是任意形式（英文，中文，数字以及标点符号）</li><li>时间戳：每个文字在音频中的时间位置</li></ul></li><li><p><strong>phoneme-pose字典生成</strong>：</p><ul><li>英语音素表和汉字声韵母表</li></ul><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902163622330.png" alt="image-20220902163622330"></p><ul><li>关键姿态抽取：使用Openpose从训练视频中通过平均所有的音素姿态提取关键口型姿态</li><li>音素抽取：使用了P2FA对齐器(aligner,来确定发声及其发声的时间位置。该任务需要两个输入：音频和单词转录。预先将转录的单词映射到 phone sequence中。通过比较观察到的语音信号和预训练的基于隐马尔可夫模型（HMM）的声学模型来确定phone boundaries。在强制对准中，语音信号被分析为连续的一组帧（例如，每10ms）。在给定观察数据和HMM表示的声学模型的情况下，通过找到最可能的隐藏状态序列来确定帧与音素的对齐方式。然后，根据对齐方式为字典中的每个音素存储pose sequences。根据数据集的视频帧速率和平均讲话速率来确定phoneme-poses的宽度。</li></ul></li><li><p><strong>Key Pose Insertion</strong>:</p><ul><li>如果两个音素关键姿势帧之间的间隔长度大于或等于最小关键姿势距离，我们将使用Key pose~i~ 和Key pose~i+1~进行插值。</li><li>如果两个音素关键姿态帧之间的间隔长度小于最小关键姿态距离，我们将跳过Key pose~i+1~，使用Key pose~i~和Key pose~i+2~进行插值。</li><li>最后使用插值将两个关键姿势序列之间的关键姿势与音素姿势的加权和混合，如图 下图所示。输出序列中的新帧被插值在两个关键姿势帧之间，根据它们与那些帧的距离加权两帧。权重与关键帧的距离成反比，即距离越大，权重越小。</li></ul></li></ul><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902151937267.png" alt="image-20220902151937267"></p><ul><li><strong>Smoothing</strong>：这里就是为了不影响精度对以嘴部为中心的区域不进行平滑处理</li></ul><blockquote><p>实验</p></blockquote><ul><li>实验数据集相关信息</li></ul><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902161810683.png" alt="image-20220902161810683"></p><ul><li>同其他audio-driven的sota方法效果比较（上），使用原视频文本生成不同类型声音版本跟原始视频进行比较（下）</li></ul><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902161848953.png" alt="image-20220902161848953"></p><ul><li>生成过程可视化</li></ul><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902165209440.png" alt="image-20220902165209440"></p><ul><li>同其他方法训练，处理和推断时间的比较</li></ul><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220902165240277.png" alt="image-20220902165240277"></p><blockquote><p>自己的一些看法</p></blockquote><ul><li>最终作者的演示视频中展示的效果看起来怪怪的，而且评估指标均采用人为的主观评价，目前刚接触这一领域，感觉用这种方式去评估方法的好坏并不是很客观</li><li>而且我总觉得一般人说话除了口型外，面部表情大部分是跟语义相关的而并非语音，按照作者的这种方法，将音素同讲话者姿态绑定就会看起来怪怪的</li></ul><h2 id="AD-NeRF-Audio-Driven-Neural-Radiance-Fields-for-Talking-Head-Synthesis">AD-NeRF: Audio Driven Neural Radiance Fields for Talking Head Synthesis</h2><p><strong>论文连接</strong>：<a href="https://arxiv.org/abs/2103.11078">https://arxiv.org/abs/2103.11078</a></p><p><strong>GitHub代码地址</strong>：<a href="https://github.com/YudongGuo/AD-NeRF">https://github.com/YudongGuo/AD-NeRF</a></p><p><strong>演示视频</strong>：<a href="https://v.youku.com/v_show/id_XNTEyNzY5MTA0NA==.html">https://v.youku.com/v_show/id_XNTEyNzY5MTA0NA==.html</a></p><blockquote><p>动机</p></blockquote><blockquote><p>方法</p></blockquote><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220906155734957.png" alt="image-20220906155734957"></p><p><img src="/2022/09/02/text2video%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AE%80%E8%AE%B0/image-20220906155812709.png" alt="image-20220906155812709"></p><blockquote><p>实验</p></blockquote><blockquote><p>自己的一些看法</p></blockquote><h2 id="Audio-driven-Talking-Face-Video-Generation-with-Learning-based-Personalized-Head-Pose">Audio-driven Talking Face Video Generation with Learning-based Personalized Head Pose</h2><p><strong>论文连接</strong>：<a href="https://arxiv.org/pdf/2002.10137v2.pdf">https://arxiv.org/pdf/2002.10137v2.pdf</a></p><p><strong>GitHub代码地址</strong>：<a href="https://github.com/yiranran/Audio-driven-TalkingFace-HeadPose">https://github.com/yiranran/Audio-driven-TalkingFace-HeadPose</a></p><p><strong>演示视频</strong>：<a href="https://cg.cs.tsinghua.edu.cn/people/~Yongjin/video_arxiv.mp4">https://cg.cs.tsinghua.edu.cn/people/~Yongjin/video_arxiv.mp4</a></p><h2 id="A-Lip-Sync-Expert-Is-All-You-Need-for-Speech-to-Lip-Generation-In-The-Wild">A Lip Sync Expert Is All You Need for Speech to Lip Generation In The Wild</h2><p><strong>论文连接</strong>：<a href="https://arxiv.org/pdf/2008.10010v1.pdf">https://arxiv.org/pdf/2008.10010v1.pdf</a></p><p><strong>GitHub代码地址</strong>：<a href="https://github.com/Rudrabha/Wav2Lip">https://github.com/Rudrabha/Wav2Lip</a></p><p><strong>演示视频</strong>：<a href="https://www.youtube.com/watch?v=0fXaDCZNOJc">https://www.youtube.com/watch?v=0fXaDCZNOJc</a></p>]]></content>
      
      
      <categories>
          
          <category> 论文笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> text2video </tag>
            
            <tag> 视频生成 </tag>
            
            <tag> 跨模态 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器重置记录</title>
      <link href="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/"/>
      <url>/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="mysql">mysql</h3><p>这次密码一定好好设置！！！</p><ol><li>获取mysql官方包(mysql5.7以前一直在用，相对比较稳定，所以这里选择mysql5.7)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><p>注：wget不成功，可以去官网上直接下载然后再上传到服务器上</p><ol start="2"><li>安装mysql的rpm</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh mysql80-community-release-el7-3.noarch.rpm</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825150934876.png" alt="image-20220825150934876"></p><ol start="3"><li>查看并更改将要安装的mysql相关文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist all | grep mysql</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825151651816.png" alt="image-20220825151651816"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum config-manager --disable mysql80-community</span><br><span class="line">yum config-manager --enable mysql57-community</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825151756799.png" alt="image-20220825151756799"></p><ol start="4"><li>安装mysql</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-community-server --nogpgcheck </span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825152448393.png" alt="image-20220825152448393"></p><p>若出现上图的报错：Unable to find a match: mysql-community-server，则</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">先执行：yum module disable mysql</span><br><span class="line">再执行：yum install mysql-community-server --nogpgcheck </span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825152629821.png" alt="image-20220825152629821"></p><p>然后稍微等一会mysql就安装好了，可以用下面的命令验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql --version</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825152847645.png" alt="image-20220825152847645"></p><ol start="5"><li>启动mysql</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动mysqld 服务端</span></span><br><span class="line">systemctl start mysqld</span><br><span class="line"><span class="comment">#查看是否启动</span></span><br><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825153120966.png" alt="image-20220825153120966"></p><p>现在mysql就启动成功了</p><ol start="6"><li>查看mysql初始密码</li></ol><blockquote><p>从mysql5.7开始，初始数据库为空启动会自动创建超级用户root并将密码存储在错误日志文件中 /var/log/mysql.log</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &#x27;temporary password&#x27; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220825153736241.png" alt="image-20220825153736241"></p><p>红框部分就是初始密码</p><ol start="7"><li>修改密码</li></ol><p>建议设置的复杂一点，mysql还是很容易被渗透的，然后就被删库勒索比特币</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> root<span class="variable">@localhost</span> identified  <span class="keyword">BY</span> <span class="string">&#x27;xxxx&#x27;</span>;</span><br><span class="line">flush privileges;</span><br><span class="line"># 要设置比较简单的密码就需要取消密码复杂度，编辑 <span class="operator">/</span>etc<span class="operator">/</span>my.cnf配置文件, 在 [mysqld]配置块儿中添加如下内容(不建议使用这种配置)</span><br><span class="line">plugin<span class="operator">-</span>load<span class="operator">=</span>validate_password.so </span><br><span class="line">validate<span class="operator">-</span>password<span class="operator">=</span>OFF</span><br></pre></td></tr></table></figure><ol start="8"><li>授权远程登录</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> privileges <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> root@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;xxxxx&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>然后就可以在本地快乐的用服务器数据库了</p><h3 id="nginx">nginx</h3><ol><li>下载nginx</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget  http://nginx.org/download/nginx-1.22.0.tar.gz</span><br></pre></td></tr></table></figure><p>也可以在官网http://nginx.org/en/download.html下载好传到服务器上</p><ol start="2"><li>一键安装相关依赖</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><ol start="3"><li>安装nginx</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">解压安装包</span></span><br><span class="line">tar zxvf nginx-1.22.0.tar.gz</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">进入nginx目录</span></span><br><span class="line">cd nginx-1.22.0</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line">./configure --with-http_stub_status_module --with-http_ssl_module &amp;&amp; make &amp;&amp; make install</span><br></pre></td></tr></table></figure><ol start="4"><li>更改nginx配置文件</li></ol><p>此步是针对我个人服务器设置，且其中包含大部分应用案例及注释，仅供参考</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">user  nobody;</span></span><br><span class="line">worker_processes  1;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">error_log  logs/error.log;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">error_log  logs/error.log  info;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    #log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">    #                  &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">    #                  &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    #access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">负载均衡配置</span></span><br><span class="line"><span class="meta">#</span><span class="bash">upstream myserver &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#列出要均衡的服务器列表 默认采用轮询的方式进行</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#server xx.xxx.xxx.xxx:8080;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#server xx.xxx.xxx.xxx:8081;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#weight 为权重 默认为1，权重越高被分配的客户端就越多</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#server xx.xxx.xxx.xxx:8080 weight=5;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#server xx.xxx.xxx.xxx:8081 weight=10;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#ip_hash 根据访问的ip进行分配 解决session问题</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">ip_hash;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server xx.xxx.xxx.xxx:8080;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server xx.xxx.xxx.xxx:8081;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#fair 按照服务器响应时间进行分配</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#server xx.xxx.xxx.xxx:8080;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#server xx.xxx.xxx.xxx:8081;</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">#fair；</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">server&#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">listen 80;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server_name xx.xxx.xxx.xxx;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">location /&#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">proxy_pass http://myserver;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">root html;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">index index.html index.htm;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="comment">#&#125;</span></span></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">listen 443 ssl; </span><br><span class="line">server_name xxxx.com; </span><br><span class="line"></span><br><span class="line">ssl_certificate 1_xx.xxx_bundle.crt; </span><br><span class="line">ssl_certificate_key 2_xx.xxx.key; </span><br><span class="line"></span><br><span class="line">ssl_session_timeout 5m;</span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2; </span><br><span class="line">ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; </span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">proxy_pass http://xx.xxx.xxx.xxx:8081;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ /resume/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1:8080;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name xx.xxx.xxx.xxx;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line"><span class="meta">#</span><span class="bash">转发到443https</span></span><br><span class="line">return 301 https://$host$request_uri;  </span><br><span class="line">        #charset koi8-r;</span><br><span class="line"></span><br><span class="line">        #access_log  logs/host.access.log  main;</span><br><span class="line"></span><br><span class="line">        #error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        # redirect server error pages to the static page /50x.html</span><br><span class="line">        #</span><br><span class="line">        #error_page   500 502 503 504  /50x.html;</span><br><span class="line">        #location = /50x.html &#123;</span><br><span class="line">        #    root   html;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    proxy_pass   http://127.0.0.1;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">        #</span><br><span class="line">        #location ~ \.php$ &#123;</span><br><span class="line">        #    root           html;</span><br><span class="line">        #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        #    fastcgi_index  index.php;</span><br><span class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">        #    include        fastcgi_params;</span><br><span class="line">        #&#125;</span><br><span class="line"></span><br><span class="line">        # deny access to .htaccess files, if Apache&#x27;s document root</span><br><span class="line">        # concurs with nginx&#x27;s one</span><br><span class="line">        #</span><br><span class="line">        #location ~ /\.ht &#123;</span><br><span class="line">        #    deny  all;</span><br><span class="line">        #&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # another virtual host using mix of IP-, name-, and port-based configuration</span><br><span class="line">    #</span><br><span class="line">    #server &#123;</span><br><span class="line">    #    listen       8000;</span><br><span class="line">    #    listen       somename:8080;</span><br><span class="line">    #    server_name  somename  alias  another.alias;</span><br><span class="line"></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line">    #&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">反向代理示例一：将对80端口的请求转发到服务器8080tomcat</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server&#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">listen 80;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server_name xx.xxx.xxx.xxx;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">反向代理示例一：</span></span><br><span class="line">    #    location / &#123;</span><br><span class="line">    #        root   html;</span><br><span class="line"><span class="meta">#</span><span class="bash"> proxy_pass http://127.0.0.1:8080;</span></span><br><span class="line">    #        index  index.html index.htm;</span><br><span class="line">    #    &#125;</span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">反向代理示例二：根据路径中不同内容转发到不同的端口</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server&#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">listen 9001;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">server_name xx.xxx.xxx.xxx;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">location ~ /edu/ &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">proxy_pass http://127.0.0.1:8080;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">location ~ /vod/ &#123;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">proxy_pass http://127.0.0.1:8081;</span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>常用操作</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./nginx #使用默认的配置文件启动nginx服务</span><br><span class="line">./nginx -s reload #修改配置后重新加载生效</span><br><span class="line">./nginx -s stop #停止nginx服务</span><br><span class="line">./nginx -t  #检查配置文件是否有语法错误</span><br></pre></td></tr></table></figure><h3 id="docker">docker</h3><h3 id="为博客搭建git裸仓">为博客搭建git裸仓</h3><p>1.安装git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95%5Cimage-20220825181428877.png" alt="image-20220825181428877"></p><p>2.创建用户并进行相应设置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">添加git用户</span></span><br><span class="line">useradd git </span><br><span class="line"><span class="meta">#</span><span class="bash">设置密码</span></span><br><span class="line">passwd git</span><br><span class="line"><span class="meta">#</span><span class="bash">切换到git</span></span><br><span class="line">su git</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3.搭建裸仓</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">博客存放真实目录</span></span><br><span class="line">cd /var/www/blog</span><br><span class="line">mkdir blog</span><br><span class="line"><span class="meta">#</span><span class="bash">裸仓</span></span><br><span class="line">mkdir repos</span><br><span class="line">cd repos</span><br><span class="line">git init --bare blog.git</span><br><span class="line"><span class="meta">#</span><span class="bash">创建钩子函数</span></span><br><span class="line">cd blog.git/hooks</span><br><span class="line"><span class="meta">#</span><span class="bash">创建 post-receive文件，并在里面输入如下内容</span></span><br><span class="line">    #!/bin/sh</span><br><span class="line">    git --work-tree=/var/www/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">为该文件添加执行权限</span></span><br><span class="line">chmod +x post-receive</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">退出到root用户</span></span><br><span class="line">exit </span><br><span class="line"><span class="meta">#</span><span class="bash">设置git用户权限</span></span><br><span class="line">chown -R git:git /home/git/repos/blog.git </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4.在本地电脑测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@xx.xxx.xx.xxx:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220826083422843.png" alt="image-20220826083422843"></p><p>若出现上述效果则表示裸仓搭建成功</p><p>5.为了确保安全，我们需要禁用git的shell登录功能，只能进行git clone,git push等操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells # 查看 git-shell 是否在登录方式里面</span><br><span class="line">which git-shell # 通常在 /usr/bin/git-shell</span><br><span class="line">vi /etc/shells  #在文件中添加上述路径</span><br></pre></td></tr></table></figure><p><img src="/2022/08/24/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E7%BD%AE%E8%AE%B0%E5%BD%95/image-20220826083730524.png" alt="image-20220826083730524"></p><p>然后修改/etc/passwd中git的权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将原来的</span></span><br><span class="line">git:x:1001:1001::/home/git:/bin/bash</span><br><span class="line"><span class="meta">#</span><span class="bash">修改为</span></span><br><span class="line">git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span><br></pre></td></tr></table></figure><p>6.若出现nginx报403错误，可能是权限问题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/www</span><br><span class="line">chmod -R 777 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>语义分割常用评价指标</title>
      <link href="/2022/03/08/%E8%AF%AD%E4%B9%89%E5%88%86%E5%89%B2%E5%B8%B8%E7%94%A8%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/"/>
      <url>/2022/03/08/%E8%AF%AD%E4%B9%89%E5%88%86%E5%89%B2%E5%B8%B8%E7%94%A8%E8%AF%84%E4%BB%B7%E6%8C%87%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<p>​        理论上来说从应用的角度考虑评价一个图像语义分割算法好坏应该从准确度，处理速度以及存储空间占用情况三个方面考虑，但就理论研究而言准确度往往更加重要且直观，因此以下总结的常用指标均为语义分割准确度层面的评估指标。同时由于目前研究问题主要是二分类的语义分割任务，相关实现均以二分类的语义分割为主。语义分割本质上就是像素级的分类任务，很多指标通用实现方法均可按照分类的评价指标进行实现。因此混淆矩阵的实现算是语义分割评价指标实现的关键步骤。下面先简单介绍混淆矩阵以及二分类任务下的评价指标。</p><h3 id="混淆矩阵">混淆矩阵</h3><p>混淆矩阵也称误差矩阵，是表示精度评价的一种标准格式，用n行n列的矩阵形式来表示，以下是二分类任务中的混淆矩阵。</p><table><thead><tr><th>真实情况\预测结果</th><th>正例</th><th>反例</th></tr></thead><tbody><tr><td>正例</td><td>TP（真正例）</td><td>FN（假反例）</td></tr><tr><td>反例</td><td>FP（假正例）</td><td>TN（真反例）</td></tr></tbody></table><blockquote><p>上面表格中第二个字母代表预测的结果是正例还是反例，第一个字母代表预测正确还是错误</p></blockquote><p><strong>具体实现代码如下</strong>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getConfusionMatrix</span>(<span class="params">img,gt,num_class</span>):</span></span><br><span class="line">    mask = (gt&gt;=<span class="number">0</span>)&amp;(gt&lt;num_class) <span class="comment">#避免图像中有错误信息导致后面的bincount产生错误</span></span><br><span class="line">    label = self.num_class*gt[mask]+img[mask]</span><br><span class="line">    count = torch.bincount(label,minlength=self.num_class**<span class="number">2</span>)</span><br><span class="line">    confusionMatrix = count.reshape(self.num_class,self.num_class)</span><br><span class="line">    <span class="keyword">return</span> confusionMatrix</span><br><span class="line"><span class="comment">#TN FP</span></span><br><span class="line"><span class="comment">#FN TP</span></span><br></pre></td></tr></table></figure><h3 id="分类任务评估指标">分类任务评估指标</h3><h4 id="Accuracy准确度">Accuracy准确度</h4><p>准确度是指所有预测正确的比例，公式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>c</mi><mi>c</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Acc=\frac{TP+TN}{TP+FP+TN+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal">cc</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">TN</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">TN</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="Precision-查准率">Precision 查准率</h4><p>​查准率定义为所有预测是正例的正确率，用公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P=\frac{TP}{TP+FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="Recall-查全率">Recall 查全率</h4><p>​查全率是指真正例在真实情况为正例中的比例，直白一点就是在一次实验中预测正例正确占全部正例的比率，用公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R=\frac{TP}{TP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="F1-Score">F1 Score</h4><p>​查准率和查全率通常是一对互相矛盾的指标，并不单独来评价预测准确率，F1 是二者的调和平均数常被作为重要的评价指标。用公式表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mn>1</mn><mo>=</mo><mfrac><mrow><mn>2</mn><mi>P</mi><mi>R</mi></mrow><mrow><mi>P</mi><mo>+</mo><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F1=\frac{2PR}{P+R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">PR</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h3 id="语义分割评估指标">语义分割评估指标</h3><h4 id="Pixel-accuracy-像素准确度">Pixel accuracy 像素准确度</h4><p>​这种方式跟分类任务中的准确度一样，直接对图像的每一个像素进行判断，<strong>用预测对的像素的数量除以总的像素数量</strong>来反映预测的准确度。公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>A</mi><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msub><mi>p</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">PA=\frac{\sum_{i=0}^K{p_{ii}}}{\sum_{i=0}^K\sum_{j=0}^K{p_{ij}}}=\frac{TP+TN}{TP+FP+TN+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9303em;vertical-align:-0.7519em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1784em;"><span style="top:-2.5703em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.535em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">TN</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">TN</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>（其中K代表分类数，加上背景总共K+1类，pij代表将类别i的像素预测为类别j）</p><h4 id="Mean-Pixel-accuracy-MPA">Mean Pixel accuracy MPA</h4><p>​这种方式是对PA的一种扩展，还是对图像的每个像素进行判断，但这次<strong>计算每个类别的正确率，最后求平均值</strong>。公式可以表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>P</mi><mi>A</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><mfrac><msub><mi>p</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">MPA=\frac{1}{K+1}\sum_{i=0}^{K}\frac{p_{ii}}{\sum_{j=0}^{K}{p_{ij}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">MP</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7331em;vertical-align:-0.7519em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.5703em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="IoU-交并比">IoU 交并比</h4><p>​<strong>语义分割最常用的评价指标</strong>，这个根据名字就可以理解，交并比就是指<strong>预测值跟真值的交集除以他们两个的并集</strong>，用这种方式反映预测的准确度也很好理解，一样的地方越多越好，不一样的地方越少越好。公式表示为**<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>o</mi><mi>U</mi><mo>=</mo><mi>J</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>A</mi><mo>∩</mo><mi>B</mi></mrow><mrow><mi>A</mi><mo>∪</mo><mi>B</mi></mrow></mfrac><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">IoU=J(A,B)=\frac{A\cap B}{A\cup B}=\frac{TP}{TP+FP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mbin mtight">∪</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>**</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">IoU</span>(<span class="params">img,gt</span>):</span></span><br><span class="line">    <span class="keyword">assert</span> img.shape==gt.shape</span><br><span class="line">    inner = (img*gt).<span class="built_in">sum</span>(dim=(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">    outter = (img+gt).<span class="built_in">sum</span>(dim=(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">    IoU = inner/outter</span><br><span class="line">    <span class="keyword">return</span> IoU</span><br></pre></td></tr></table></figure><h4 id="Mean-IoU-平均交并比">Mean-IoU 平均交并比</h4><p>​主要用于多分类问题，就是对所有类单独做IoU，最后求均值</p><h4 id="Dice-coefficient">Dice coefficient</h4><p>Dice系数是另一种图像分割领域常用的评价指标（尤其是在医学图像分割领域），可以将其定义为<strong>预测图和真实图的重叠区域的两倍，再除以两个图像中像素的总数</strong>，用公式表示为 <strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mrow><mo fence="true">∣</mo><mi>A</mi><mo>∩</mo><mi>B</mi><mo fence="true">∣</mo></mrow></mrow><mrow><mrow><mo fence="true">∣</mo><mi>A</mi><mo fence="true">∣</mo></mrow><mo>+</mo><mrow><mo fence="true">∣</mo><mi>B</mi><mo fence="true">∣</mo></mrow></mrow></mfrac><mo>=</mo><mfrac><mrow><mn>2</mn><mi>T</mi><mi>P</mi></mrow><mrow><mn>2</mn><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">Dice=\frac{2\left | A\cap B \right |}{\left | A \right |+\left | B \right |}=\frac{2TP}{2TP+FN+FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ce</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathnormal mtight">A</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span><span class="mbin mtight">+</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="minner mtight"><span class="mopen mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span><span class="mord mathnormal mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mclose mtight delimcenter" style="top:0em;"><span class="mtight">∣</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></strong></p><p>在预测二值图是可以发现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo>=</mo><mi>F</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Dice=F1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ce</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Dice</span>(<span class="params">img,gt</span>):</span></span><br><span class="line">    <span class="comment">#einsum   爱因斯坦求和  大佬论文中都爱用的这个，试着玩点花的/doge</span></span><br><span class="line">    <span class="keyword">assert</span> img.shape == gt.shape</span><br><span class="line">    inner = torch.einsum(<span class="string">&#x27;hw-&gt;&#x27;</span>,img*gt) <span class="comment">#和上面IoU的inner等价</span></span><br><span class="line">    X = torch.einsum(<span class="string">&#x27;hw-&gt;&#x27;</span>,img)</span><br><span class="line">    Y = torch.einsum(<span class="string">&#x27;hw-&gt;&#x27;</span>,gt)</span><br><span class="line">    dice = <span class="number">2</span>*inner/(X+Y)</span><br><span class="line">    <span class="keyword">return</span> dice</span><br></pre></td></tr></table></figure><h4 id="Mean-Absolute-Error-MAE">Mean Absolute Error (MAE)</h4><p>平均绝对误差是指<strong>预测图和真值图中不一样的部分占两图中总像素的比重</strong> 公式表示为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>A</mi><mi>E</mi><mo>=</mo><mfrac><mrow><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">MAE=\frac{FP+FN}{TP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">MAE</span>(<span class="params">img,gt</span>):</span></span><br><span class="line">    <span class="keyword">assert</span> img.shape==gt.shape</span><br><span class="line">    mae = (img-gt).<span class="built_in">abs</span>().<span class="built_in">sum</span>()/(img.shape[<span class="number">0</span>]*img.shape[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">return</span> mae</span><br></pre></td></tr></table></figure><blockquote><p>以下混淆矩阵实现各个评估指标方式，此处仅展示PA，其他评估指标均可以根据公式以混淆矩阵的方式进行实现</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SegmentationMetric</span>():</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.num_class = <span class="number">2</span></span><br><span class="line">        self.confusionMatrix = torch.zeros((self.num_class,)*<span class="number">2</span>)</span><br><span class="line">        <span class="comment">#TN FP</span></span><br><span class="line">        <span class="comment">#FN TP</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addImage</span>(<span class="params">self,img,gt</span>):</span></span><br><span class="line">        <span class="keyword">assert</span> img.shape == gt.shape</span><br><span class="line">        self.confusionMatrix = self.getConfusionMatrix(img,gt)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getConfusionMatrix</span>(<span class="params">self,img,gt</span>):</span></span><br><span class="line">        mask = (gt&gt;=<span class="number">0</span>)&amp;(gt&lt;self.num_class)</span><br><span class="line">        label = self.num_class*gt[mask]+img[mask]</span><br><span class="line">        count = torch.bincount(label,minlength=self.num_class**<span class="number">2</span>)</span><br><span class="line">        confusionMatrix = count.reshape(self.num_class,self.num_class)</span><br><span class="line">        <span class="keyword">return</span> confusionMatrix</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reset</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.confusionMatrix = torch.zeros((self.num_class,self.num_class))</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">PA</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment">#像素准确率  PA = (TP+TN)/(TP+FP+FN+TN)</span></span><br><span class="line">        pa = torch.diag(self.confusionMatrix).<span class="built_in">sum</span>()/self.confusionMatrix.<span class="built_in">sum</span>()</span><br><span class="line">        <span class="keyword">return</span> pa</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">CPA</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="comment">#分类像素准确率  类似二分类中的查准率   TP/(TP+FP)  TN/(TN+FN)</span></span><br><span class="line">        cpa = torch.diag(self.confusionMatrix)/self.confusionMatrix.<span class="built_in">sum</span>(axis=<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> cpa</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">mPA</span>(<span class="params">self</span>):</span></span><br><span class="line">        cpa = self.CPA()</span><br><span class="line">        mpa = torch.mean(cpa)</span><br><span class="line">        <span class="keyword">return</span> mpa</span><br></pre></td></tr></table></figure><h3 id="参考资料">参考资料</h3><p>[1] <a href="https://blog.csdn.net/hello_dear_you/article/details/120786851">语义分割的评价指标</a></p><p>[2] Minaee S ,  Y  Boykov,  Porikli F , et al. Image Segmentation Using Deep Learning: A Survey[J].  2020.</p><p>[3] <a href="https://blog.csdn.net/sinat_29047129/article/details/103642140">【语义分割】评价指标：PA、CPA、MPA、IoU、MIoU详细总结和代码实现（零基础从入门到精通系列！）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 语义分割 </tag>
            
            <tag> 毕业设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新机环境安装指南</title>
      <link href="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
      <url>/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p>换了台新电脑，大学四年大概就重装过一次系统。后面装了好多东西和相关环境，每次都是安的时候直接百度，跟着流程走。每次配的倒也还算顺利，后面也很少出问题，所以后面就压根没写什么博客。这次换电脑，感觉所有步骤都有印象但是完全自己整有些细节确实记不大清楚，这次换了配置这么高的电脑，大概率很久不会再换了。但是免不了重装或者给别人装，所以本篇博客记录一些配置过程中的关键步骤收集一些写的较好的参考文章，有些步骤就不会特别详细。</p></blockquote><h2 id="Python环境安装">Python环境安装</h2><h3 id="pycharm-安装">pycharm 安装</h3><ol><li><p>直接进入官网的下载地址： <a href="https://www.jetbrains.com/pycharm/download/#section=windows">https://www.jetbrains.com/pycharm/download/#section=windows</a></p></li><li><p>选择免费的社区版进行下载</p><p><img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104134800005-16413955066551.png" alt="image-20220104134800005"></p></li><li><p>选择合适的路径进行安装（基本上就一路下一步）</p></li></ol><p><img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104134659884-16413955066552.png" alt="image-20220104134659884"></p><h3 id="基本的python环境-换源">基本的python环境+换源</h3><blockquote><p>我目前大多数情况下使用anaconda（后文会用这种方式），此部分具体使用未作验证谨慎参考。使用anaconda 此部分可以略过</p></blockquote><ol><li><p>进入python官网 <a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p></li><li><p>随便选一个稳定的版本下载</p></li><li><p>运行python安装器<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104140707412-16413955066553.png" alt="image-20220104140707412"></p><p><img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104140735302-16413955066554.png" alt="image-20220104140735302"><img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104140752933-16413955066565.png" alt="image-20220104140752933"></p></li><li><p>安装完成后进入命令窗口输入python验证，出现下图则安装完成<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104141040701-16413955066566.png" alt="image-20220104141040701"></p></li><li><p>后续在下载新库的时候若不进行设置默认会用国外的源，绝大多数情况都会下载很慢。直接在命令行中输入以下命令将默认的下载源换位清华的源，换成国内其他源同理</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="Anaconda">Anaconda</h3><p>推荐参考使用文章</p><p>​Anaconda完全入门指南 <a href="https://www.jianshu.com/p/eaee1fadc1e9">https://www.jianshu.com/p/eaee1fadc1e9</a></p><p>​知乎关于python和Anacondahttps://www.zhihu.com/question/58033789/answer/254673663</p><ol><li><p>官网下载： <a href="https://www.anaconda.com/products/individual">https://www.anaconda.com/products/individual</a><img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104145427167-16413955066567.png" alt="image-20220104145427167"></p></li><li><p>运行安装，直接一路下一步，然后你就可以看到这些东西已经被安装好了<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220104145916655-16413955066568.png" alt="image-20220104145916655"></p></li><li><p>更换下载的镜像源</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">添加清华的镜像源</span></span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge </span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">设置下载搜索时显示通道地址</span></span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><h2 id="JAVA环境安装">JAVA环境安装</h2><ol><li><p>官网下载 ：<a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p></li><li><p>运行安装</p></li><li><p>添加JAVA_HOME环境变量<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105085653252-16413955066569.png" alt="image-20220105085653252"></p></li><li><p>新建变量名：CLASSPATH，变值：<strong>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</strong> （注意前面的 <strong>.;</strong> 也要放进去）<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105090000654-164139550665610.png" alt="image-20220105090000654"></p></li><li><p>打开path，添加如下两条变量<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105090359255-164139550665611.png" alt="image-20220105090359255"></p></li></ol><p>6.打开命令行运行java和javac即可验证是否安装成功</p><h2 id="其他环境配置">其他环境配置</h2><h3 id="git">git</h3><p>参考文章 ：<a href="https://blog.csdn.net/huangqqdy/article/details/83032408?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3.no_search_link&amp;utm_relevant_index=6">Git下载、安装与环境配置</a></p><p>基本按照这个流程走完就可以正常使用了</p><h3 id="Node-js">Node.js</h3><ol><li><p>官网下载： <a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105082200954-164139550665612.png" alt="image-20220105082200954"></p></li><li><p>运行安装</p></li><li><p>在命令行输入node -v 显示如下信息则安装成功<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105082342634-164139550665613.png" alt="image-20220105082342634"></p></li><li><p>配置更改仓库存放位置，先建两个文件夹，然后在命令行出入后面的命令<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105082611807-164139550665614.png" alt="image-20220105082611807"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set prefix &quot;D:\environment\nodejs\node_global&quot;</span><br><span class="line">npm config set cache &quot;D:\environment\nodejs\node_cache&quot;</span><br></pre></td></tr></table></figure></li><li><p>在系统的环境变量添加NODE_PATH变量<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105082818010-164139550665615.png" alt="image-20220105082818010"></p></li><li><p>在用户的环境变量中添加<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105083000612-164139550665616.png" alt="image-20220105083000612"></p></li><li><p>配置cnpm（如果报错可以尝试使用管理员运行cmd进行安装）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>命令行中输入 cnpm -v 进行验证<img src="/2022/01/04/%E6%96%B0%E6%9C%BA%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/image-20220105083247739.png" alt="image-20220105083247739"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 环境安装 </tag>
            
            <tag> java </tag>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文简记</title>
      <link href="/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/"/>
      <url>/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="CLIP-Learning-Transferable-Visual-Models-From-Natural-Language-Supervision">CLIP:Learning Transferable Visual Models From Natural Language Supervision</h2><p>（2022.2.13）</p><blockquote><p>简要介绍</p></blockquote><p><strong>论文连接</strong>：<a href="https://arxiv.org/pdf/2103.00020.pdf">https://arxiv.org/pdf/2103.00020.pdf</a></p><p><strong>GitHub代码地址</strong>：<a href="https://github.com/OpenAI/CLIP">https://github.com/OpenAI/CLIP</a></p><p><strong>简要描述</strong>：作者认为像用类似ImageNet数据集中有1000个固定类别做预训练，限制了模型做迁移的泛化性和扩展性。因此作者设计了一个新的预训练任务——通过图片直接预测对应的文本，为此作者团队从网上爬取大量的&lt;图片，文本&gt;数据样本形成了一个包含4亿样本的数据集。通过该数据集做预训练最终在不用一张imageNet数据集中图片(Zero-shot)的情况下可以和ResNet-50打成平手（top-1准确率76.2%）且在相关的下游任务中，zero-shot有更好的表现</p><blockquote><p>关键性的概念及内容</p></blockquote><ul><li>模型迁移学习过程<ul><li>首先预训练阶段，对样本中的文本和图片分别进行编码。这里的编码器可以是ResNet-50这种卷积神经网络，也可以是Transformer这种。论文中效果最好的是采用的 ViT-L/14@336px这一模型。图中主对角线就是正例，其余特征的结合均为反例</li><li>将预训练好的模型迁移到新的任务上时，可以先进行简单的提示工程。如果是imageNet的话就是将一千个类别变成一千句话然后进行特征提取。提示工程具体来说就是假设有一个数据集中都是食物，那么第二步中就可以是a food photo of {object}。由于在预训练过程中模型是真的学到了图片对应的语义信息，因此这样的语义提示会有很好的效果。</li><li>如果是采用zero-shot模式的话，就直接对图片进行特征提取，同前面的文字特征进行结合的到最终的结果</li></ul></li></ul><p><img src="/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/image-20220213122610415.png" alt="image-20220213122610415"></p><ul><li><p>迁移学习的形式</p><ul><li><p>zero-shot  : 在不用新数据集中任何一个样本的情况下进行迁移的形式</p></li><li><p>few-shot：仅对新数据集中每类使用少量的样本进行微调的过程</p></li><li><p>linear-probe： 将预训练的主干网络中的参数冻住，然后用全部新的数据集对尾部的分类或者具体任务进行微调的过程</p></li></ul></li><li><p>zero-shot是一个比较显眼的成果，但实际上论文中linear-probe的效果才是真正令人惊艳的，真正意义上能应用到更多的领域</p></li></ul><blockquote><p>个人的一些想法</p></blockquote><ul><li>我用冰墩墩和鞭炮做了一个简单的尝试，可以看到模型99.9%的认为这是一个熊猫，甚至于我把英文换成拼音xiongmao它也基本认定和这个图片有关（0.95）。还有就是在用鞭炮图片的时候我用中文它也有0.85认为和图片有关系。所以我很好奇是因为作者团队所创建的数据集过于庞大真的囊括大部分情况使得模型准确率如此高，还是说模型真的学到了文本和图片中的语义信息。</li></ul><p><img src="/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/image-20220213143030191.png" alt="image-20220213143030191"></p><ul><li>作者自己在局限性章节指出，他们选用这些数据集做实验虽然数量很多，但是实验次数多了以后难免引入部分过拟合。模型的扩展性和泛化性需要进一步探究。</li><li>是否可以利用医学图像区域分割的数据集对该模型进行linear-probe。本身医学图像的数据集普遍都比较小，该模型在zero-shot和few-shot都有非常不错的表现，如果能够通过linear=probe进行微调将模型迁移到医学图像分割问题上感觉是个人感觉是可以取得不错的效果的。</li></ul><h2 id="ConvNeXt：A-ConvNet-for-the-2020s">ConvNeXt：A ConvNet for the 2020s</h2><p>（2022.2.16）</p><blockquote><p>简要介绍</p></blockquote><p><strong>论文连接</strong>：<a href="https://arxiv.org/pdf/2201.03545v1.pdf">https://arxiv.org/pdf/2201.03545v1.pdf</a></p><p><strong>GitHub代码地址</strong>： <a href="https://github.com/facebookresearch/ConvNeXt">https://github.com/facebookresearch/ConvNeXt</a></p><p><strong>简要描述</strong>：近几年随着VIT和Swin-Transformer的出现，相比于卷积神经网络（Conv），Transformer系列的架构在许多视觉任务上都表现的十分突出，因此研究人员普遍都认同Transformer这种结构在本质上优于Conv，能够在大规模参数的情况下得到更优异的成果。但作者团队却认为现阶段的transformer或者conv+transformer本质上都是相同的，造成效果不同的原因是优化策略，所以这篇论文就按照swin-transformer中的思路对resnet进行了充分的优化，最终在ImageNet数据集上取得和swin-Transformer同样的结果（top-1准确率：87.8%），在下游任务中基本都略优于transformer。</p><p>参考博客：<a href="https://blog.csdn.net/qq_37541097/article/details/122556545?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164499362916780269849296%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=164499362916780269849296&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-2-122556545.first_rank_v2_pc_rank_v29&amp;utm_term=convnext&amp;spm=1018.2226.3001.4187">ConvNeXt网络详解</a></p><blockquote><p>核心内容</p></blockquote><p>基本上这张图片就可以算是整篇论文的核心</p><p><img src="/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/image-20220216150325775.png" alt="image-20220216150325775"></p><ul><li><strong>Macro design</strong><ul><li><strong>stage ratio</strong>, 作者从宏观角度发现ResNet-50中模块堆叠比例是(3,4,6,3)，但在swin-T中是(1,1,3,1)，在大型的swin-T甚至达到(1,1,9,1)，因此将ResNet中堆叠比例修改成(3,3,9,3)。准确率由78.8%提升到79.4%</li><li><strong>Changing stem to “Patchify”</strong>，在transformer中通常是使用不重叠的卷积层进行下采样（卷积核大小=步长），swin-T中使用的ks=4x4,stride=4，因此修改后的ResNet也采用该方式进行下采样。准确率提升了0.1%到79.5%，这步个人感觉意义不大更多是为了跟swin-T保持一致。</li></ul></li><li><strong>ResNeXt-ify</strong>，这一步主要是借鉴了ResNeXt中组卷积可以降低计算量提高准确率，将原始ResNet中瓶颈结构的3x3替换成组卷积。作者觉得<code>depthwise convolution</code>和<code>self-attention</code>中的加权求和操作类似，因此将dw conv的组数设置和通道数相同，最后准确率提升到80.5%<ul><li>dw conv 和pw conv 含义作用可以参考这篇文章： <a href="https://blog.csdn.net/tintinetmilou/article/details/81607721">https://blog.csdn.net/tintinetmilou/article/details/81607721</a></li></ul></li><li><strong>Inverted Bottleneck</strong>, 反瓶颈结构。在原始的ResNet中采用（大-小-大)的形式减少计算量，但是后面有人认为这样会损失空间信息应该采用图3 b中（小-大-小）的形式（b中最后的1x1应该是384=&gt;96），Transformer中MLP也有类似的设计，所以最后修改的ResNet采用了图4中所示的结构。最后准确率提升到80.6%</li></ul><p><img src="/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/image-20220216160856740.png" alt="image-20220216160856740"></p><ul><li><strong>Large kernel</strong>, 自VGGNet后基本上卷积神经网络都采用的小卷积核(3x3)，但在transformer中大多都采用很大的卷积核，所以这里也同样进行效仿<ul><li><strong>Moving up depthwise conv layer</strong>，把dw conv移动到1x1卷积前面，这里主要是参照在transformer中 MSA模块在MLP前面。准确度降低到79.9%同时计算量也有所下降</li><li><strong>Increasing the kernel size</strong>，尝试增大卷积核，最后实验表明7x7卷积核效果最好，包括在较大的ResNet-200中也是如此。在计算量几乎没有改变的情况下，准确率提高到了80.6%。</li></ul></li></ul><p><img src="/2021/12/21/%E8%AE%BA%E6%96%87%E7%AE%80%E8%AE%B0%E7%B2%BE%E8%AE%B0/image-20220220084241048.png" alt="image-20220220084241048"></p><ul><li><strong>Micro Design</strong>,一些微观层面的设计<ul><li><strong>ReLU=&gt;GELU</strong>,准确率没变化，主要是在最新的一些transformer中用到了这种激活函数就把GELU应用到卷积网络中。（感觉作用不是很大）</li><li><strong>Fewer activation functions</strong>，在transformer的一个模块中除了最后的MLP中有激活函数其余均没有，因此将ResNet中除了两个1x1卷积间的激活函数外均去掉，也就是每个block只进行一次激活函数，准确率提升到了81.3%。（感觉这个trick蛮有意思的）</li><li><strong>Fewer normalization layers</strong>，只保留dwconv后的一个归一化层，准确率提升到81.4%</li><li><strong>Substituting BN with LN</strong>，用LN替代BN, BN主要是用来提高收敛速度和避免过拟合的，但是也可能会对模型的最终性能造成一定的影响。最后将所有的BN替换成LN 准确率提升到81.5%</li><li><strong>Separate downsampling layers</strong>，单独的下采样层。这里的修改有点没大看懂，但准确率最后来到了82.0%</li></ul></li></ul><blockquote><p>个人的一些想法</p></blockquote><ul><li>这篇文章通过效仿transformer中的一些设计和trick，通过大量实验将ResNet-50模型准确率硬生生提升了3，4个百分点，可以说是一定程度上打破了未来全部都transformer化的进程。</li><li>这篇文章中许多调参技巧都值得去进一步进行验证和使用</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 论文笔记 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学美食测评篇</title>
      <link href="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/"/>
      <url>/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<p>开个坑，具体格式后面再改！用这不到一年的时间记录一下校园里的美食</p><h2 id="小美篇">小美篇</h2><h3 id="筋饼卷一切">筋饼卷一切</h3><p>（2021.11.29更新）</p><ul><li><strong>地点</strong>：小美二楼进门左前方</li><li><strong>碎碎念</strong>：有家里春饼的味道了就是有点小，看旁边人吃感觉好多人不知道这饼是两张压在一起的，只有撕开来吃才有灵魂！土豆丝经典比卷物！可惜这没有大葱我还不咋喜欢吃洋葱</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/13.png" alt></p><h3 id="饼类早餐">饼类早餐</h3><p>（2021.11.22更新）</p><ul><li><strong>地点</strong>：小美三楼早餐方便面左侧</li><li><strong>碎碎念</strong>：这个是我大三早餐最常来的地方，常来到什么地步，就是那会这还有鸡蛋灌饼，我每天都点，去的还相对比较早，后来整的打饭的叔看到我就直接刷卡把东西打好给我。再后来就很久没去过了，然后这学期刚开学的某天早上突然又去了一回，但真没想到那个叔竟然还认识我，还问我咋好久不来了，被人记住的感觉真不错温暖了一整天。但是最近偶尔再去就没看到那个叔叔了。至于吃的方面，由于后面没了鸡蛋灌饼，其他的饼也就普普通通，偶尔会有元宵。倒是旁边窗口的烤红肠和皮蛋瘦肉粥着实不错，就是那边主食都是油炸的。</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/10.png" alt></p><h3 id="麻辣拌">麻辣拌</h3><p>（2021.11.20更新）</p><ul><li><strong>地点</strong>：小美二楼最北侧</li><li><strong>碎碎念</strong>：这个应该是大三之后开的，因为每次等的时间比较长所以吃的次数比较少。相对来说比较重口，但真的很好吃。应该是最近新出的炸鸡蛋泡，也不知道是咋做的，里面还是溏心蛋，蛋清也超级蓬松，裹上吸满麻辣拌的酱汁超级满足。推荐有空的话，一定要尝试一下</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/7.png" alt></p><h3 id="炸串">炸串</h3><p>（2021.11.20更新）</p><ul><li><strong>地点</strong>：小美一楼门口</li><li><strong>碎碎念</strong>：大学四年头回吃，封校出不去偶尔来吃一回是真的爽。之前经常刷到吃炸串的视频，今天突发奇想跟舍友来试试。薯塔刚开始吃着没啥调料比较淡，吃到后面油香油香的是真的好吃，强烈推荐！其他的也都蛮好吃的。</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/8.png" alt></p><h3 id="鸡丝燃面">鸡丝燃面</h3><p>（2021.11.19更新）</p><ul><li><strong>地点</strong>：小美三楼20号窗口（才知道原来每个窗口都是有标号的）</li><li><strong>碎碎念</strong>：以前给的鸡丝超级多，每口都有肉吃不完的那种，这学期来了就只有这么一点了。不过味道还是很不错的，推荐尝试！</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/6.png" alt></p><h3 id="热干面">热干面</h3><p>（2021.11.18更新）</p><ul><li><p><strong>地点</strong>：小美一楼进门右前方</p></li><li><p><strong>碎碎念</strong>：记得第一次吃还是女朋友带我吃的，然后就真香了。最喜欢吃麻辣热干面，不是很辣但和其他调料混合在一起会形成很美妙的味道。以前这个窗口还有个糖醋拌面也还挺好吃的，但这个学期就不见了。</p><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/2.png" alt></p></li></ul><h3 id="排长队的包子">排长队的包子</h3><p>（2021.11.18更新）</p><ul><li><p><strong>地点</strong>：小美一楼进门左前方</p></li><li><p><strong>碎碎念</strong>：感觉应该是小美最受欢迎的包子了，我有一个舍友能一天三顿都吃这包子。早上只要是饭点就绝对是超级长的长队。虽然卖包子的叔叔很熟练，但看到那么长的队就没有吃的欲望了，好在现在没有课，错峰去或者早点去一般就没啥人。平时主要吃牛肉和烧麦，以前也经常点鸡汁的，都还不错。补充一点这的辣椒超级辣不能吃辣慎加，平时在学校吃包子不咋蘸料，之前整了稍微多了一点给我辣麻了。</p></li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/3.png" alt></p><h3 id="饺子园">饺子园</h3><p>（2021.11.18更新）</p><ul><li><p><strong>地点</strong>：小美一楼最左侧</p></li><li><p><strong>碎碎念</strong>：好像是大三开的，个人觉得算的上是学校饺子界的天花板了（ps：有无虫虫粉丝）。盘子啥的还挺专业–两层上面开洞，这样饺子就是干的，体验确实挺不错。今天点了份没吃过的鲜蘑猪肉的，超级好吃。这的饺子都挺好吃，虽然没全吃过但点过的都挺满意。哎，我咋忘记拍照片了呢，改天再去补上！</p></li></ul><h2 id="大美篇">大美篇</h2><h3 id="馅饼">馅饼</h3><p>（2021.11.18更新）</p><ul><li><strong>地点</strong>：大美一楼最右侧，早餐的话在最中间</li><li><strong>碎碎念</strong>：一般是晚饭没啥胃口来着吃点，主要有猪肉，牛肉和韭菜鸡蛋的，味道是不错就是有点油大。韭菜鸡蛋的有点韭菜盒子的感觉所以还挺喜欢吃的，再就是这的粥也都挺好喝的</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/4.png" alt></p><h3 id="粤式烧腊">粤式烧腊</h3><p>（2021.11.17更新）</p><ul><li><p><strong>地点</strong>：大美一楼南侧粤式烧腊</p></li><li><p><strong>碎碎念</strong>：算是在大美最经常吃的一家了，他家的五花肉，烧鹅，鸡排，还有9元带骨头咸咸的鸡肉都还很不错，素菜就一般般没啥好推荐的了，这是最近新出的肉，也不知道叫啥也还挺好吃的</p></li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/1.png" alt></p><h2 id="天美篇">天美篇</h2><h3 id="水煮鱼">水煮鱼</h3><p>（2021.11.29更新）</p><ul><li><strong>地点</strong>：天美三楼</li><li><strong>碎碎念</strong>：这是女朋友过生日请的嘿嘿，下面有水煮鱼，烤盘培根金针菇以及炸杏鲍菇。有一说一水煮鱼看着是真的有食欲，味道也算中规中矩，就是大头菜超级多，当然两个人吃的话鱼肉也不少。</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/14.png" alt></p><h3 id="烤鱼">烤鱼</h3><p>（2021.11.29更新）</p><ul><li><strong>地点</strong>：天美二楼</li><li><strong>碎碎念</strong>：没刺的烤鱼，没有任何鱼腥味然后鱼皮一般还是那种焦焦的感觉味道极好，最重要的是肉量足。强烈推荐番茄烤鱼，以前除了这款都非常辣但听说貌似不是很辣了，主要番茄烤鱼汤也很好喝。</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/11.png" alt></p><h3 id="煎饼侠">煎饼侠</h3><p>（2021.11.29更新）</p><ul><li><strong>地点</strong>：天美一楼</li><li><strong>碎碎念</strong>：这是最近新出的红豆饼和像披萨一样的鸡蛋饼，平时感觉好吃的还有牛肉饼和太阳饼，配上一碗粥非常适合早餐和晚餐。</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/12.png" alt></p><h3 id="重庆小面-宜宾燃面">重庆小面-宜宾燃面</h3><p>（2021.11.22更新）</p><ul><li><strong>地点</strong>：天美一楼</li><li><strong>碎碎念</strong>：这的汤面和抄手应该还挺不错的，平时排队的人比较多，身边喜欢吃的也比较多。因为我平时不是很喜欢吃汤面所以不做过多评价。但是拌面还是挺喜欢吃的，尤其是这个燃面。搭配上花生碎和梅菜非常好吃，但不知道是不是我吃法有问题，每次吃到最后剩的梅菜比较多还比较咸，我明明都拌匀了呀。</li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/9.png" alt></p><h3 id="包子">包子</h3><p>（2021.11.19更新）</p><ul><li><p><strong>地点</strong>：天美一楼</p></li><li><p><strong>碎碎念</strong>：这绝对学校包子界的天花板，胡萝卜牛肉和酱肉的yyds。因为天美是离公寓最远的一个食堂（杏园以前还没有），以前基本没在天美吃过早餐。第一次吃天美的包子还是我第一次国护升旗，彩排结束后统一提供的早餐。</p></li></ul><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/5.png" alt></p><h2 id="校外篇">校外篇</h2><p>应该快要解封了，不知道还有没有机会记录校外的美食了。可惜疫情腐败街被封再也没开过，那也有超多美食。</p><h2 id="家庭篇">家庭篇</h2><h4 id="蘸酱菜">蘸酱菜</h4><p>（2022.1.14）</p><p><strong>碎碎念</strong>：以前还不是很喜欢吃，后面离家时间长了还挺想的。</p><p><img src="/2021/11/17/%E5%A4%A7%E5%AD%A6%E7%BE%8E%E9%A3%9F%E6%B5%8B%E8%AF%84%E7%AF%87/IMG_20220114_180701.jpg" alt="IMG_20220114_180701"></p>]]></content>
      
      
      <categories>
          
          <category> 美食记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 校园美食 </tag>
            
            <tag> 日常生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CV专业名词解释汇总</title>
      <link href="/2021/11/16/CV%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A%E6%B1%87%E6%80%BB/"/>
      <url>/2021/11/16/CV%E4%B8%93%E4%B8%9A%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<p>鉴于自己的英语水平比较一般，作为一名刚开始阅读cv领域论文的初学者，哪怕是在翻译软件的辅助下还是经常会不能准确理解作者想表达的意思，更是经常读着读着就忘了前面讲的是啥。因此这篇博客就用来记录汇总我在阅读论文过程中初次遇到或难以理解的专业词汇，方便以后的查阅</p><h3 id="A">A</h3><p><strong>asymptotically</strong> 渐进地</p><h3 id="B">B</h3><p><strong>backpropagation</strong> 反向传播</p><h3 id="C">C</h3><p><strong>converge</strong> 收敛</p><h3 id="D">D</h3><h3 id="E">E</h3><h3 id="F">F</h3><h3 id="G">G</h3><h3 id="H">H</h3><h3 id="I">I</h3><h3 id="J">J</h3><h3 id="K">K</h3><h3 id="L">L</h3><h3 id="M">M</h3><h3 id="N">N</h3><h3 id="O">O</h3><h3 id="P">P</h3><p><strong>patch</strong> 指从完整图像分割出来的块</p><h3 id="Q">Q</h3><h3 id="R">R</h3><h3 id="S">S</h3><p><strong>stack</strong> v. 堆叠，堆叠网络层数等</p><p><strong>state of the art</strong> 形容在某一领域表现的非常突出，效果非常好  缩写为<strong>SOTA</strong></p><h3 id="T">T</h3><p><strong>touching cells</strong> 细胞接触，生物细胞学概念，指的是两个细胞紧邻，细胞膜贴在一起</p><h3 id="U">U</h3><h3 id="V">V</h3><p><strong>vanilla</strong> 普通的</p><h3 id="W">W</h3><p><strong>with a large margin</strong> 很大幅度，形容效果很好跟其他模型有较大的领先</p><h3 id="X">X</h3><h3 id="Y">Y</h3><h3 id="Z">Z</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 英文词汇 </tag>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>U-Net论文阅读笔记</title>
      <link href="/2021/11/13/U-Net/"/>
      <url>/2021/11/13/U-Net/</url>
      
        <content type="html"><![CDATA[<h3 id="解决什么样的问题">解决什么样的问题</h3><p>这篇文章主要是关于利用深度卷积网络解决<strong>生物医学图像分割</strong>的问题。我们回到作者提出Unet的那个年代来看看这篇论文提出的背景，AlexNet在ImageNet大赛上优越的表现使得深度学习再次受到研究人员的重视，在此后的几年里在视觉识别的许多领域里采用类似的深度卷积网络都取得了非常不错的成果特别是图像分类任务，但是这些领域基本都有一个前提就是拥有大规模的标记数据集，这样才能保证大规模的深度网络能够被训练起来。然而在医学图像分割任务上，一方面<strong>很难拥有大规模的图像数据集</strong>，常常就几百张而已，用传统的方法基本上是训练不起来的。另一方面，图像分割任务不再是一张图片对应一个类别而是对一张图像上的<strong>每个像素都进行类别预测</strong>。大体上作者当时就是要解决这样两个核心问题。</p><h3 id="解决问题的思路">解决问题的思路</h3><p><img src="/2021/11/13/U-Net/fcn.png" alt></p><ul><li>首先是借鉴了FCN（全卷积神经网络的）的思路，FCN应该算是最先将深度学习应用在图像分割，它可以实现端到端的分割，但是它分割细节不够精确。在FCN中为了获得更全面的上下文信息是将下采样中第三第四以及最后的特征图上采样的统一大小进行融合。而作者为了获得更丰富的上下文信息选择直接将低层信息直接拼接到高层信息上来，在上采样（反卷积）过程中保留了特征通道，于是就形成了下图这样对称的U型结构</li></ul><p><img src="/2021/11/13/U-Net/cover.png" alt></p><ul><li>然后因为医学图像通常比较大且图像大小也不完全统一，为了处理任意大的图像，作者采用了overlap-tile的策略</li><li>针对数据集小的问题，作者考虑到医学领域细胞器官往往变化变异比较多，于是对现有数据集通过随机弹性变化进行数据增广，让模型从中学到弹性变化中的不变性。</li></ul><h3 id="核心的知识点">核心的知识点</h3><p><img src="/2021/11/13/U-Net/overlap-file.png" alt></p><ul><li>overlap-file：这个策略主要是用来无缝分割任意大的图像，要预测黄色区域的部分，就需要将蓝色区域的图像数据作为输入，对于边缘区域外部不存在的部分就采用镜像复制进行填充。</li><li>加权损失，U-Net主要是通过加权的交叉熵评估损失进行SGD的优化，这个权值是通过预先计算图中每个像素的权值从而使得网络更加注重对相互接触的细胞边缘进行学习，下图中d就是预先计算的图像像素权重示意图</li></ul><p><img src="/2021/11/13/U-Net/loss.png" alt></p><p>这里稍微解释一下这个预先计算权重的方法，因为是针对细胞接触类型的图所以并不适用所有类型的图像处理，但很有借鉴意义。通过预先计算权重图的来获得每一个像素在损失函数中的权值，这种方法补偿了训练数据每类像素的不同频率，并且使网络更注重学习相互接触的细胞间的边缘。关于权重的预先计算采用的如下公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mi>c</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>w</mi><mn>0</mn></msub><mo>⋅</mo><mi>e</mi><mi>x</mi><mi>p</mi><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>d</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>d</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">w(x)=w_c(x)+w_0\cdot exp\left ( -\frac{(d_1(x)+d_2(x))^2}{2\sigma ^2} \right )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.5945em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.8em;vertical-align:-0.65em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1089em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>c</mi></msub></mrow><annotation encoding="application/x-tex">w_c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是用来平衡类别频率的权重，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_1(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是像素x到最近细胞边界的距离，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d_2(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是像素x到第二近细胞边界的距离</p><p></p><h3 id="还存在什么样的问题">还存在什么样的问题</h3><h4 id="U-net贡献总结">U-net贡献总结</h4><p>先总结一下U-Net中的主要贡献</p><ul><li>提出了U-net网络结构，拥有捕获上下文信息提取特征能力的收缩路径，更有着能够精确定位的对称扩展路径。</li><li>采用overlap-tile策略使得网络能够对任意大的图像进行分块处理，更能捕捉到较为全面的上下文信息</li><li>采用了随机弹性形变进行数据增广，适用于细胞电子显微图像并不具有普适性</li><li>采用加权损失，预先计算权重图，让网络能够充分学习到想要关注的内容</li></ul><h4 id="存在的问题">存在的问题</h4><p>关于存在的问题，从文中可以看到作者关于为什么选择总层数23层或者说收缩和扩展四次并没有给出任何解释，后来的U-net++ 就是从这个角度入手给出了更为精确的分割模型</p>]]></content>
      
      
      <categories>
          
          <category> 机器学习论文笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 区域分割 </tag>
            
            <tag> 机器学习 </tag>
            
            <tag> 生物医学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于DL的图像分割综述论文阅读笔记</title>
      <link href="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>论文名称：Image Segmentation Using Deep Learning:A Survey</p><p>论文链接：<a href="https://arxiv.org/pdf/2001.05566">https://arxiv.org/pdf/2001.05566</a></p><h3 id="文章主要成果">文章主要成果</h3><ul><li>汇总了截至2019年100多种区域分割算法并将他们分为如下十类<ul><li>全卷积网络（FCN）</li><li>基于图形模型的卷积模型</li><li>编码器-解码器基础模型</li><li>基于多尺度分析的金字塔网络模型</li><li>R-CNN基础模型</li><li>膨胀卷积（空洞卷积Atours）模型和Deeplab系列</li><li>循环神经网络模型（RNN）</li><li>基于注意力机制的模型</li><li>生成模型和对抗训练（GAN）</li><li>基于主动轮廓的卷积模型</li></ul></li><li>对这些基于深度学习的分割算法进行了全面的分析和总结</li><li>提供了对20多种主流图像分割领域数据集的介绍</li><li>提供了图像区域分割算法性能评价的常用指标</li><li>提出未来基于深度学习的图像分割可能存在的方向和挑战</li></ul><h3 id="汇总分析">汇总分析</h3><p>因为是综述性论文，此部分内容过于庞杂，短时间内无法完全理解全部内容，因此此部分仅对我理解的或者感兴趣的进行简要描述与分析，便于后续的学习与分析</p><h4 id="主干架构">主干架构</h4><h5 id="CNNs">CNNs</h5><p><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/1.png" alt="卷积神经网络"></p><p>卷积神经网络(CNNs)可以算是深度学习领域最成功被应用最广泛的架构之一。</p><p>经典CNN架构主要由三部分组成：</p><ul><li>卷积层，需要带权重的卷积核，主要用来提取特征</li><li>非线性激活层，增加网络模型的非线性表达能力</li><li>池化层，减小特征图分辨率，降低计算量，同时后面层能获得更大的感受野</li></ul><p>主要优势：所有感受区域共享卷积核的参数，相比于全连接神经网络极大程度上降低参数量</p><p>常见著名的CNN网络：AlexNet，GoogleNet，VGGNet，ResNet</p><h5 id="RNNs-和-LSTM">RNNs 和 LSTM</h5><p><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/2.png" alt="RNN"></p><p>RNN被广泛应用于序列处理的神经网络，序列处理问题简单讲就是后面的数据和前面的数据有联系的问题。可以从上面图中看到每一个输入<strong>xt</strong>都会和上一层的隐藏层<strong>ht-1</strong>进行叠加从而输出新的<strong>Ot</strong>和隐藏层<strong>ht</strong>，这样确实能有效整合前面的特征与信息，但一旦序列过长就会遇到梯度消失或梯度爆炸问题，这就是<strong>长期依赖问题</strong></p><p><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/3.png" alt="LSTM"></p><p>为了解决长期依赖问题，便有了LSTM（长短期记忆），大概就如上图所示在RNN的基础上进行了改进。</p><p>感觉近几年RNN和LSTM在CV领域用的不是很多（李弘毅2021机器学习课程里面提到的），所以这里也不进行过多分析，有关LSTM和RNN可以参考这篇博客<a href="https://www.jianshu.com/p/9dc9f41f0b29">理解LSTM网络</a></p><h5 id="Encoder-Decoder">Encoder-Decoder</h5><p><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/4.png" alt="encoder-decoder"></p><p>编码器-解码器模型主要是通过两级网络将输入域映射到输出域，由编码函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>z</mi><mo>=</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z=g(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>将输入转换压缩为潜在的空间表示来提取捕获输入的语义信息，再由解码函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y=f(z)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span>来预测潜在空间表示的输出。</p><h5 id="GAN">GAN</h5><h4 id="基于DL的图像分割模型">基于DL的图像分割模型</h4><h5 id="FCN">FCN</h5><h5 id="基于多尺度分析的金字塔网络模型">基于多尺度分析的金字塔网络模型</h5><h5 id="膨胀卷积（空洞卷积Atours）模型和Deeplab系列">膨胀卷积（空洞卷积Atours）模型和Deeplab系列</h5><h5 id="基于注意力机制的模型">基于注意力机制的模型</h5><h3 id="主流数据集">主流数据集</h3><h4 id="PASCAL-Visual-Object-Classes-VOC-：">PASCAL Visual Object Classes (VOC)：</h4><p>​<strong>计算机视觉中最受欢迎的数据集之一</strong>，带注释的图像可用于5个任务——分类，细分，检测，动作识别和人员布局。 文献中报道的几乎所有流行的分割算法都已在该数据集上进行了评估。 对于细分任务，有21类对象标签-车辆，家庭，动物，飞机，自行车，船，公共汽车，汽车，摩托车，火车，瓶，椅子，餐桌，盆栽，沙发，电视/显示器，鸟 ，猫，牛，狗，马，绵羊和人（如果像素不属于这些类别中的任何一个，则将其标记为背景）。此数据集分为两组，分别是训练集和验证集，分别有1464和1449张图像 。</p><p><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/d1.png" alt="数据集图片1"></p><h4 id="PASCAL-Context">PASCAL Context</h4><p>​PASCAL VOC 2010检测挑战的扩展，它包含所有训练图像的逐像素标签。 它包含400多个类（包括原始的20个类以及PASCAL VOC分割的背景），分为三类（对象，填充和混合）。 该数据集的许多对象类别太稀疏了； 因此，通常会选择59个常见类别的子集来使用。</p><h4 id="Microsoft-Common-Objects-in-Context-MS-COCO">Microsoft Common Objects in Context (MS COCO)</h4><p>​另一种大规模的对象检测，分割和字幕数据集。 COCO包含日常复杂场景的图像，其中包含自然环境中的常见对象。 该数据集包含91种对象类型的照片，并以328k图像的形式总共标记了250万个实例。它主要用于分割单个对象实例。 图44显示了给定样本图像的MS COCO标签与先前数据集之间的差异。检测挑战包括80多个类别，提供超过82k图像进行训练，提供40.5k图像进行验证以及超过80k图像进行测试。<br><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/d2.png" alt="数据集图片2"></p><h4 id="Cityscapes">Cityscapes</h4><p>​一个大型数据库，<strong>专注于对城市街道场景的语义理解</strong> 。 它包含来自50个城市的街道场景中记录的各种立体声视频序列集，5k帧的高质量像素级注释以及一组2万帧的弱注释，包括30类的语义和密集像素注释， 分为8类-平面，人，车辆，建筑物，物体，自然，天空和空隙。<br><img src="/2021/11/10/%E5%9F%BA%E4%BA%8EDL%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2%E7%BB%BC%E8%BF%B0%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/d3.png" alt="数据集图片3"></p><h4 id="ADE20K-MIT-Scene-Parsing-SceneParse150-：">ADE20K /MIT Scene Parsing (SceneParse150)：</h4><p>​提供用于场景解析算法的标准培训和评估平台。 该基准的数据来自ADE20K数据集，其中包含超过2万张以场景为中心的图像，并用对象和对象部件进行了详尽注释。 基准分为用于训练的2万图像，用于验证的2千图像和用于测试的另一批图像。 该数据集中有150个语义类别。</p><h4 id="SiftFlow：">SiftFlow：</h4><p>​包括来自LabelMe数据库子集的2688个带注释的图像。 256 * 256像素的图像基于8个不同的室外场景，其中包括街道，山脉，田野，海滩和建筑物。 所有图像都属于33个语义类别之一。</p><h4 id="Stanford-background：">Stanford background：</h4><p>​包含来自现有数据集（例如LabelMe，MSRC和PASCAL VOC）的场景的室外图像。 它包含715张具有至少一个前景对象的图像。 数据集按像素进行注释，可用于语义场景理解。 使用Amazon的Mechanical Turk（AMT）获得了该数据集的语义和几何标签。</p><h4 id="Berkeley-Segmentation-Dataset-BSD-：">Berkeley Segmentation Dataset (BSD)：</h4><p>​包含来自30个人类受试者的1,000个Corel数据集图像的12,000个手工标记的分割。 目的是为图像分割和边界检测研究提供经验基础。 一半的分割是通过向对象呈现彩色图像获得的，另一半是通过呈现灰度图像获得的。 基于此数据的公共基准包括300张图像的所有灰度和颜色细分。 图像分为200个图像的训练集和100个图像的测试集。</p><h4 id="Youtube-Objects：">Youtube-Objects：</h4><p>​包含从YouTube收集的视频，其中包括十个PASCAL VOC类的对象（飞机，鸟，船，汽车，猫，牛，狗，马，摩托车和火车）。 原始数据集不包含逐像素注释（因为它最初是为检测对象而开发的，具有弱注释）。 然而，Jain等人手动注释了126个序列的子集，然后提取了帧的子集以进一步生成语义标签。 此数据集中总共有大约10,167个带注释的480x360像素帧。</p><h4 id="KITTI">KITTI</h4><p>​<code>最流行的移动机器人和自动驾驶数据集之一</code>。 它包含数小时的交通场景视频，并以各种传感器模式（包括高分辨率RGB，灰度立体摄像头和3D激光扫描仪）进行记录。 原始数据集不包含用于语义分割的基本事实，但是研究人员出于研究目的手动注释了数据集的各个部分。Alvarez等人从道路检测挑战中生成了323个图像的地面真相，分为道路，vertical和天空3类</p><h3 id="常用的评价指标">常用的评价指标</h3><p>这部分还是挺有用的，详细记录一下</p><p>理论上来说从应用的角度考虑评价一个图像分割算法好坏应该从准确度，处理速度以及存储空间占用情况三个方面考虑，但就理论研究而言目前更重视准确度，因此以下常用指标均从准确度出发给出</p><h4 id="Pixel-accuracy-像素精度">Pixel accuracy 像素精度</h4><p>​这种方式就比较直白，直接对图像的每一个像素进行判断，<strong>用预测对的像素的数量除以总的像素数量</strong>来反映预测的准确度。公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mi>A</mi><mo>=</mo><mfrac><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msub><mi>p</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub></mrow><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">PA=\frac{\sum_{i=0}^K{p_{ii}}}{\sum_{i=0}^K\sum_{j=0}^K{p_{ij}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.9303em;vertical-align:-0.7519em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1784em;"><span style="top:-2.5703em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.535em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>（其中K代表分类数，加上背景总共K+1类，pij代表将类别i的像素预测为类别j）</p><h4 id="Mean-Pixel-accuracy-MPA">Mean Pixel accuracy MPA</h4><p>​这种方式是对PA的一种扩展，还是对图像的每个像素进行判断，但这次<strong>计算每个类别的正确率，最后求平均值</strong>。公式可以表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mi>P</mi><mi>A</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>K</mi><mo>+</mo><mn>1</mn></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><mfrac><msub><mi>p</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><mrow><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>K</mi></msubsup><msub><mi>p</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">MPA=\frac{1}{K+1}\sum_{i=0}^{K}\frac{p_{ii}}{\sum_{j=0}^{K}{p_{ij}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">MP</span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.7331em;vertical-align:-0.7519em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.5703em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8852em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-2.8971em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4461em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="IoU-交并比">IoU 交并比</h4><p>​<strong>语义分割最常用的评价指标</strong>，这个根据名字就可以理解，交并比就是指<strong>预测值跟真值的交集除以他们两个的并集</strong>，用这种方式反映预测的准确度也很好理解，一样的地方越多越好，不一样的地方越少越好。公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>o</mi><mi>U</mi><mo>=</mo><mi>J</mi><mo stretchy="false">(</mo><mi>A</mi><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>A</mi><mo>∩</mo><mi>B</mi></mrow><mrow><mi>A</mi><mo>∪</mo><mi>B</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">IoU=J(A,B)=\frac{A\cap B}{A\cup B}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2173em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mbin mtight">∪</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mbin mtight">∩</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="Mean-IoU-平均交并比">Mean-IoU 平均交并比</h4><p>​主要用于多分类问题，就是对所有类单独做IoU，最后求均值</p><table><thead><tr><th>真实情况\预测结果</th><th>正例</th><th>反例</th></tr></thead><tbody><tr><td>正例</td><td>TP（真正例）</td><td>FN（假反例）</td></tr><tr><td>反例</td><td>FP（假正例）</td><td>TN（真反例）</td></tr></tbody></table><h4 id="Precision-查准率">Precision 查准率</h4><p>​查准率定义为所有预测是正例的正确率，用公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">P=\frac{TP}{TP+FP}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">FP</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="Recall-查全率">Recall 查全率</h4><p>​查全率是指真正例在真实情况为正例中的比例，直白一点就是在一次实验中预测正例正确占全部正例的比率，用公式表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><mi>P</mi></mrow><mrow><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">R=\frac{TP}{TP+FN}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">FN</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">TP</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>​</p><h4 id="F1-Score">F1 Score</h4><p>​查准率和查全率通常是一对互相矛盾的指标，并不单独来评价预测准确率，F1 是二者的调和平均数常被作为重要的评价指标。用公式表示为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mn>1</mn><mo>=</mo><mfrac><mrow><mn>2</mn><mi>P</mi><mi>R</mi></mrow><mrow><mi>P</mi><mo>+</mo><mi>R</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F1=\frac{2PR}{P+R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2757em;vertical-align:-0.4033em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8723em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.00773em;">PR</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4033em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><h4 id="Dice-coefficient">Dice coefficient</h4><p>Dice系数是另一种图像分割领域常用的评价指标（尤其是在医学图像分割领域），可以将其定义为<strong>预测图和真实图的重叠区域的两倍，再除以两个图像中像素的总数</strong>，用公式表示为 Dice=\frac{2\abs{A\cap B}}{\abs{A}+\abs{B}}</p><p>在预测二值图是可以发现<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>i</mi><mi>c</mi><mi>e</mi><mo>=</mo><mi>F</mi><mn>1</mn></mrow><annotation encoding="application/x-tex">Dice=F1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">i</span><span class="mord mathnormal">ce</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">1</span></span></span></span></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习论文笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> 图像分割 </tag>
            
            <tag> 综述性论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Inf-Net论文阅读笔记</title>
      <link href="/2021/11/09/Inf_Net/"/>
      <url>/2021/11/09/Inf_Net/</url>
      
        <content type="html"><![CDATA[<h2 id="Inf-Net论文精读笔记">Inf-Net论文精读笔记</h2><p>论文名称：Inf-Net: Automatic COVID-19 Lung Infection Segmentation From CT Images</p><p>论文链接：<a href="https://arxiv.org/pdf/2004.14133">https://arxiv.org/pdf/2004.14133</a></p><p>github链接：<a href="https://github.com/DengPingFan/Inf-Net">https://github.com/DengPingFan/Inf-Net</a></p><h3 id="文章主要成果简述">文章主要成果简述</h3><ul><li>作者从临床医生根据CT图像检测肺部感染区域的方法—先粗略的确定感染区域位置，再根据局部外观提取其精细的轮廓，中得到灵感，从而提出了一个用来实现新冠肺炎肺部CT图像感染区域分割的深度学习网络（Inf-Net)。该网络主要是通过显式的**边缘注意力模块（EA）<strong>从低层特征中提取感染区域边缘信息，然后通过</strong>并行部分解码器（PPD）<strong>聚合高层特征生成全局映射图提取出部分区域信息，最后通过一组级联隐式的</strong>反向注意力模块（RA）**引导加强边缘和区域信息之间的联系。后文会详细介绍EA，PPD以及RA具体的作用和实现细节</li><li>由于新冠肺炎的CT图像感染区域标记数据集数量极为稀少有限且难以进行标记，因此作者采用一种基于随机采样策略的**半监督学习（SSL）**算法，使用了大量无标记的新冠肺炎CT图像对训练样本进行扩充后，对网络进行有效的训练，极大的提升了模型的精确性和有效性。</li><li>最后，作者也设计大量的实验证明网络中的每一部分的有效性，同时也设计了对照实验充分验证Inf-Net网络在新冠肺炎CT图像进行区域分割的准确性和有效性。</li></ul><h3 id="背景介绍">背景介绍</h3><p>2020年以来新冠肺炎在全球蔓延，截至本文2021年10月31日，根据WHO最新数据显示全球累计已有 245,373,039人确诊新冠肺炎，4,979,421死于新冠肺炎。一直以来RT-PCR（可以简单理解为核酸检测）都被认为是检测新冠肺炎最有效的检测手段，但也存在较高的误检漏检率。作为核酸检测的有效补充，肺部CT影像也是可以用于对新冠肺炎的早期筛查的。但是由于<strong>新冠肺炎感染区域的高度变化且感染前后的CT图像差异对比度极小</strong>，感染区域的划分与诊断更多依靠的是医护人员主观上丰富的临床经验，所以肺部CT图像更多用于新冠肺炎患者后期的辅助治疗。除此之外，正式因为上述原因，<strong>新冠肺炎CT图像感染区域的标记是十分耗费时间且难以进行的</strong>，所以现存的标记数据集及其稀少有限。</p><h3 id="核心架构解读">核心架构解读</h3><blockquote><p>整体网络架构概述</p></blockquote><p><img src="/2021/11/09/Inf_Net/image-20211031145834721.png" alt="image-20211031145834721"></p><p>​主干网络可选，文中主要采用Res2Net。首先CT图像被送入两层卷积层来提取得到高分辨率低层次特征f2，同时这里还加了一个EA模块用来显示提升低层特征边界信息的表达。然后f2被送入三层卷积层来提取高层特征，与此同时这三层卷积层提取的特征被并行的送入PPD进而生成粗略定位感染区域的全局映射图Sg，再然后在Sg和f2共同指导下通过级联的RA模块逐步聚合边界和区域信息的联系，最后通过Sigmoid生成最终的肺部感染区域预测图Sp。</p><blockquote><p>边缘注意力模块 EA–辅助监督从低层特征学习提取准确的边缘信息</p></blockquote><p>文中的EA模块具体来讲就是将富含边缘信息的低层特征f2作为输入通过一个卷积核的卷积层得到边缘映射图Se，然后用真实标注的数据图GT生成的边缘图Ge来指导Se的生成。简单说就是用Ge和Se的BCE（二值交叉熵损失）加入到最终的损失函数中指导模型的训练方向从而让模型准确有效的提取到边缘信息</p><blockquote><p>并行部分解码器PPD–用来生成粗略定位无结构信息的感染区域全局映射图</p></blockquote><p><img src="/2021/11/09/Inf_Net/image-20211031145936990.png" alt="image-20211031145936990"></p><p>关于PPD作者在文中并没有具体介绍实现与应用细节，只是说这种方式受nnUnet启发（低层特征耗费了大量的计算资源但是对性能的贡献少）以并行的方式聚合高层特征，生成粗糙的全局映射图作为RA模块的指导，所以这里我就结合文中提供的PPD图片以及Inf-Net代码简要叙述PPD具体的操作流程。f5先是进行了一次上采样和3x3的卷积（图片应该是标反了）直接和f4进行了一次点乘，然后和f5本身进行一次上采样和卷积的结果进行结合得到临时T1。然后f5通过两次上采样和一次3x3的卷积同f4进行了一次上采样和卷积的结果以及f3进行点乘得到T2。上面得到的T1进行卷积，上采样，卷积后和T2进行结合，最后进行两次3x3卷积以及一次1x1卷积输出粗略定位感染区域的全局映射图</p><blockquote><p>反向注意力模块RA</p></blockquote><p><img src="/2021/11/09/Inf_Net/image-20211031150038024.png" alt="image-20211031150038024"></p><p>在代码中与文中的公式是一样的，但是和图片感觉可能略有不同</p><p>RA的输入有三个：本层提取到的高层次特征fi,前两层提取到的低层特征f2，以及反向回传的感染区域映射指导Si+1</p><p>首先对回传的指导映射图Si+1进行适当的采样处理，对其使用sigmoid函数后进行反转操作（0变1，1变0）然后再扩展为64通道得到RA模块的权值Ai，然后用Ai和高层特征fi做点乘再和经过下采样的低层特征做拼接后经三层卷积得到Ri，最后Ri同Si+1进行叠加得到Si</p><p>这里RA采用的是逐步擦除的策略，最终将不准确和粗糙的预测区域细化为准确完整的预测图</p><blockquote><p>损失函数设计</p></blockquote><p>不太会用markdown写数学公式，后续这里会进行适当的补充和修改</p><p><img src="/2021/11/09/Inf_Net/image-20211102133809074.png" alt="image-20211102133809074"></p><p>用到损失函数主要有两种，一个是前面EA模块提到的二元交叉熵损失（BCELoss）,另一个是在分割任务中常用的交并比损失（IoU）。用来监督边缘信息提取的Ledge就是直接使用了BCELoss。而在后续区域分割阶段的损失使用的BCE和IoU与常规的略有不同，主要是在困难像素样本点处增加了权值，Lseg由加权的BCE加上加权的IoU组成。最终总的损失函数就由EA模块中的BCE(Se,Ge)，PPD模块中的加权BCE(Sg,Gs)+加权IoU(Sg,Gs)，以及RA模块中每一部分上采样到和GT图相同大小后的BCE(Si,Gs)+IoU(Si,Gs)组成</p><h3 id="半监督学习算法">半监督学习算法</h3><p><img src="/2021/11/09/Inf_Net/image-20211102125037628.png" alt="image-20211102125037628"></p><blockquote><p>数据集的划分</p></blockquote><p>总计有100张带标记的新冠肺炎CT图像感染区域数据以及1600张无标记的肺部CT图像，随机选择用50张带标记的数据作为训练集，剩余48张作为测试集（有两张不够明显，最后人为去除了），然后用1600张无标记的训练集做扩充</p><blockquote><p>基于随机采样的半监督学习算法（具体实施策略）</p></blockquote><p>1.首先用所有带标记的50张数据作为训练集对模型进行训练得到模型M</p><p>2.从1600张无标记的数据中随机抽出5张用M进行预测生成伪标记数据</p><p>3.将这五张带有伪标记的数据加入到训练集并从无标记训练集中删除</p><p>4.用新的训练集对模型进行微调</p><p>5.重复上述步骤直到所有1600张无标记数据都被加入到训练集当中</p><h3 id="实验评价指标与结果">实验评价指标与结果</h3><p>具体实验设计与结果文中描述的比较清晰易懂就暂时不在这里具体展开，后续会根据情况进行补充</p><h3 id="实际运行代码后感悟">实际运行代码后感悟</h3><blockquote><p>原论文中采用的超参数 epoch=100 batchsize=24 学习率为0.0001 每50个epoch降为原来的0.1倍</p></blockquote><ul><li>Inf-Net<ul><li>直接用50张有正确标注的CT图片作为训练集训练100轮得到 Inf-Net-100.pth，然后就可以用这个训练好的模型做预测，结果就是inf-net的结果</li></ul></li><li>Semi-Inf-Net<ul><li>先将1600张无标注数据的CT图片随机打乱，五个一组的分成320组（split_1600.py）</li><li>按照论文中半监督学习算法进行迭代学习直到混合数据集中包含50张真正标注的图片和1600张生成的伪标注数据（<a href="http://PseudoGenerator.py">PseudoGenerator.py</a> 初始时采用的Inf-Net-100.pth作为模型的初始化权重）<ul><li>初始时采用Inf-Net-100.pth 对第一组五张无标记CT图进行预测。</li><li>然后对生成伪标记图做边缘提取。</li><li>再将这三种图放入到混合数据图中</li><li>利用混合数据集做10个epoch的微调生成新的Semi-Inf-Net-10.pth</li><li>用新生成的Semi-Inf-Net-10.pth做替换重复上述过程直到1600张全部加入到混合数据集中</li></ul></li><li>先用伪标注的1600张数据做预训练得到 Inf-Net-Pesduo-100.pth，然后再用这个作为初始化权重用50张真正数据做100轮训练进行微调得到Semi-Inf-Net-100.pth</li><li>最后进行预测</li></ul></li></ul><p>具体的代码运行流程</p>]]></content>
      
      
      <categories>
          
          <category> 论文笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> Covid-19 </tag>
            
            <tag> 区域分割 </tag>
            
            <tag> 论文笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客搭建随笔</title>
      <link href="/2021/11/06/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%9A%8F%E7%AC%94/"/>
      <url>/2021/11/06/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<h4 id="博客搭建的原因">博客搭建的原因</h4><p>大概从去年年初就想搭建自己的博客网站来记录自己的学习和生活，但奈何自己写东西很费劲同时也懒得搭就一直拖到了现在。最近闲下来之后便再次萌生了这一想法，怎么说就是一直以来我都很羡慕那些能长久坚持用博客记录自己学习和生活的人，因为每次看到别人日积月累下的博客网站都会十分羡慕和佩服。希望从今天起我也能坚持用博客来记录自己的学习和生活。然后再有一点就是自我有服务器和域名也有一年多了，除了课程设计和自己学习Linux以及相关技术的时候用的比较多，几乎绝大多数时间都处于闲置状态，这次也算是把服务器利用起来吧。</p><h4 id="今日份闲谈">今日份闲谈</h4><p>今天哈尔滨迎来了2021年首场大雪，然后我也迎来了大学以来首次滑倒，所幸没留下什么严重的伤痛。主要今天说是要下暴雪，但是温度却又在0度附近，就导致地上全是冰，整的我现在困在图书馆哪都不想去。因为平时几乎都不怎么发说说和朋友圈，突然记录也不知道该写点什么就先记录到这吧。可能后面更多的记录的是学习方面的博客。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
